# This is a basic workflow to help you get started with Actions

name: Build and Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Project variables
        run: |
          echo "VERSION=$(mvn -q help:evaluate -DforceStdout -Dexpression=project.version)" >> $GITHUB_ENV
          echo "ARTIFACT=$(mvn -q help:evaluate -DforceStdout -Dexpression=project.artifactId)" >> $GITHUB_ENV
          
      - name: Build with Maven
        id: build_maven
        run: mvn -B package shade:shade --file pom.xml
        
      - name: Release & Assets
        uses: Hs1r1us/Release-AIO@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The name of the tag
          tag_name: ${{ env.VERSION }}
          # The name of the release
          release_name: "Version ${{ env.VERSION }}"
          # Text describing the contents of the tag
#           body: # optional
          # Path to file with information about the tag
#           body_path: # optional
          # The path to the asset you want to upload
          asset_files: "target/${{ env.ARTIFACT }}-${{ env.VERSION }}.jar"
          # `true` to create a draft (unpublished) release, `false` to create a published one. Default: `false`
          draft: true 
          # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
#           prerelease: # optional
          # Repository on which to release.  Used only if you want to create the release on another repo
#           repo: # optional
